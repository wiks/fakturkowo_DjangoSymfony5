# -*- coding: utf8 -*-

"""
Django settings for iai_invoice project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'x*kjip(4vwowgcyx^efgp_y0c0_60%#0#^2z43^^opg+#u8p56'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False
# BASE_URL = 'http://cov19.qrgo.pl'  # 'http://127.0.0.1:8000'
BASE_URL = 'http://127.0.0.1:8001'
# TODO w settings_logger zakomentuj: 'formatter': 'verbose',

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'customers',
    'myfirm',
    'invoices',
    'items',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'iai_invoice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iai_invoice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'iai_invoice',
        'USER': 'iai_invoice',
        'PASSWORD': 'N4iHuIjVM6lpqboy',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8',
            'init_command': 'SET '
                            'default_storage_engine=INNODB,'
                            'character_set_connection=utf8,'
                            'collation_connection=utf8_bin'
                            # 'SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED',
        }
    }
}

'''
wiks@domek-dell:~/Dokumenty/projects/iai_invoice/db$ mysql -u iai_invoice -p iai_invoice < iai_invoice.sql
Enter password: 
'''


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Warsaw'  # 'UTC' 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(os.path.dirname(BASE_DIR), "static"),
    # os.path.join(os.path.dirname(BASE_DIR), "out_libs"),
]

BASE_LOG_DIR = os.path.join(os.path.dirname(BASE_DIR), "logs")

level_for_all = 'DEBUG'  # 'INFO'

"""
poniższe pliki logów są zapisywane przez 'www-data' w związku z czym musi mieć do nich dostęp
plik CRON jest ponadto zapisywany przez cron-ownera - w tym wypadku wiks
"""

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file_debug': {  # ogólny
            'level': level_for_all,
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_LOG_DIR, 'debug.log'),
            'formatter': 'verbose',
            "encoding": "utf8",
        },
    },
    'loggers': {
        'debug': {
            'handlers': ['console', 'file_debug'],
            'level': level_for_all,
            'propagate': True,
        },
    }
}



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# -------- dziala dla GMail -------------
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'qrcitygame@gmail.com'
EMAIL_HOST_PASSWORD = '89mn7bc5re'
DEFAULT_FROM_EMAIL = 'qr@qrgo.pl'  # jednak aby wysłał, email musi być w DB w virtual-users

